#include "api.h"
#include "xparameters.h"
#include "xil_printf.h"
#include "xil_io.h"
#include "InstructionRegister.h"


int setCurrentInstruction(unsigned int instruction)
{
	if (instruction > 4294967295 || instruction < 1)
	{
		return 0;
	}

	INSTRUCTIONREGISTER_mWriteReg(XPAR_INSTRUCTIONREGISTER_0_S00_AXI_BASEADDR, 0, instruction);

	return 1;
}

int setColorByPaletteId(unsigned int paletteId, unsigned int colorValue)
{
	if (paletteId > 15 || colorValue > 16777215)
	{
		return 0;
	}

	int opCode = SETCOLOR_OPCODE;

	opCode = opCode << OPCODE_OFFSET;
	paletteId = paletteId << PALETTEID_COLOR_OFFSET;
	colorValue = colorValue << COLORVALUE_OFFSET;

	int instruction = opCode + paletteId + colorValue;

	return setCurrentInstruction(instruction);
}

int setPaletteIdForTileId(unsigned int tileId, unsigned int paletteId, unsigned int x, unsigned int y)
{
	if (paletteId > 15 || tileId > 255 || x > 15 || y > 15)
	{
		return 0;
	}

	int opCode = SETTILE_COLOR_OPCODE;

	opCode = opCode << OPCODE_OFFSET;
	tileId = tileId << TILID_TILE_OFFSET;
	paletteId = paletteId << PALETTEID_TILE_OFFSET;
	x = X_PIXEL_TILE_OFFSET;
	y = Y_PIXEL_TILE_OFFSET;

	int instruction = opCode + tileId + paletteId + x + y;

	return setCurrentInstruction(instruction);
}

int setTileCoordBackground(unsigned int tileId, unsigned int x, unsigned int y)
{
	if (tileId > 255 || tileId < 0 || x > 63 || y > 63 || x < 0 || y < 0)
	{
		return 0;
	}

	int opCode = SETTILE_COORD_OPCODE;

	opCode = opCode << OPCODE_OFFSET;
	tileId = tileId << TILID_BACKGROUND_OFFSET;
	x = x << X_TILE_BACKGROUND_OFFSET;
	y = y << Y_TILE_BACKGROUND_OFFSET;

	int instruction = opCode + tileId + x + y;

	return setCurrentInstruction(instruction);
}

int setActorCoord(unsigned int actorId, unsigned int tileId, unsigned int x, unsigned int y)
{
	if (actorId > 7 || actorId < 0 || tileId > 31 || tileId < 0 ||x > 1023 || y > 1023 || x < 0 || y < 0)
	{
		return 0;
	}

	int opCode = SETTILE_COORD_OPCODE;

	opCode = opCode << OPCODE_OFFSET;
	actorId = actorId << ACTOR_ID_OFFSET;
	tileId = tileId << ACTOR_TILE_OFFSET;
	x = x << X_ACTOR_COORD_OFFSET;
	y = y << y_ACTOR_COORD_OFFSET;

	int instruction = opCode + actorId + tileId + x + y;

	return setCurrentInstruction(instruction);
}


